name: Sonarqube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install SonarScanner
      working-directory: src
      run: dotnet tool install dotnet-sonarscanner --global
    - name: Restore dependencies
      working-directory: src
      run: dotnet restore
    - name: Restore Test dependencies
      working-directory: test
      run: dotnet restore
    - name: Sonar Begin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      working-directory: src
      run: dotnet-sonarscanner begin /k:"YulerB_EF-Duration-Interceptor" /o:"yulerb" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
    - name: Build
      working-directory: src
      run: dotnet build --no-restore --configuration Release
    - name: Build Test
      working-directory: test
      run: dotnet build --no-restore 
    - name: Test
      working-directory: test
      run: dotnet test --logger trx --logger:\"junit;LogFilePath=./test-results.xml\" --no-build --collect:\"XPlat Code Coverage\" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    - name: Sonar End
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      working-directory: src
      run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}" 
